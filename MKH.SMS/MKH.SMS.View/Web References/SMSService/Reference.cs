//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18408.
// 
#pragma warning disable 1591

namespace MKH.SMS.View.SMSService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="v2Soap", Namespace="http://tempuri.org/")]
    public partial class v2 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendSMSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendSMS2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMessageStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCreditOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckMessageIDsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReceiveMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCountForPostalCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendBulkSmsToPostalCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBulkRequestInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNewsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPaymentUrlOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public v2() {
            this.Url = global::MKH.SMS.View.Properties.Settings.Default.MKH_SMS_View_SMSService_v2;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendSMSCompletedEventHandler SendSMSCompleted;
        
        /// <remarks/>
        public event SendSMS2CompletedEventHandler SendSMS2Completed;
        
        /// <remarks/>
        public event GetMessageStatusCompletedEventHandler GetMessageStatusCompleted;
        
        /// <remarks/>
        public event GetCreditCompletedEventHandler GetCreditCompleted;
        
        /// <remarks/>
        public event CheckMessageIDsCompletedEventHandler CheckMessageIDsCompleted;
        
        /// <remarks/>
        public event GetReceiveMessagesCompletedEventHandler GetReceiveMessagesCompleted;
        
        /// <remarks/>
        public event GetCountForPostalCodeCompletedEventHandler GetCountForPostalCodeCompleted;
        
        /// <remarks/>
        public event SendBulkSmsToPostalCodeCompletedEventHandler SendBulkSmsToPostalCodeCompleted;
        
        /// <remarks/>
        public event GetBulkRequestInfoCompletedEventHandler GetBulkRequestInfoCompleted;
        
        /// <remarks/>
        public event GetNewsListCompletedEventHandler GetNewsListCompleted;
        
        /// <remarks/>
        public event CancelCompletedEventHandler CancelCompleted;
        
        /// <remarks/>
        public event GetPaymentUrlCompletedEventHandler GetPaymentUrlCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMS", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] SendSMS(string username, string password, string[] senderNumbers, string[] recipientNumbers, string[] messageBodies, string[] sendDate, int[] messageClasses, long[] checkingMessageIds) {
            object[] results = this.Invoke("SendSMS", new object[] {
                        username,
                        password,
                        senderNumbers,
                        recipientNumbers,
                        messageBodies,
                        sendDate,
                        messageClasses,
                        checkingMessageIds});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void SendSMSAsync(string username, string password, string[] senderNumbers, string[] recipientNumbers, string[] messageBodies, string[] sendDate, int[] messageClasses, long[] checkingMessageIds) {
            this.SendSMSAsync(username, password, senderNumbers, recipientNumbers, messageBodies, sendDate, messageClasses, checkingMessageIds, null);
        }
        
        /// <remarks/>
        public void SendSMSAsync(string username, string password, string[] senderNumbers, string[] recipientNumbers, string[] messageBodies, string[] sendDate, int[] messageClasses, long[] checkingMessageIds, object userState) {
            if ((this.SendSMSOperationCompleted == null)) {
                this.SendSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMSOperationCompleted);
            }
            this.InvokeAsync("SendSMS", new object[] {
                        username,
                        password,
                        senderNumbers,
                        recipientNumbers,
                        messageBodies,
                        sendDate,
                        messageClasses,
                        checkingMessageIds}, this.SendSMSOperationCompleted, userState);
        }
        
        private void OnSendSMSOperationCompleted(object arg) {
            if ((this.SendSMSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMSCompleted(this, new SendSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendSMS2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] SendSMS2(string username, string password, string senderNumbers, string[] recipientNumbers, string messageBodies, string sendDate, int messageClasses, long[] checkingMessageIds) {
            object[] results = this.Invoke("SendSMS2", new object[] {
                        username,
                        password,
                        senderNumbers,
                        recipientNumbers,
                        messageBodies,
                        sendDate,
                        messageClasses,
                        checkingMessageIds});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void SendSMS2Async(string username, string password, string senderNumbers, string[] recipientNumbers, string messageBodies, string sendDate, int messageClasses, long[] checkingMessageIds) {
            this.SendSMS2Async(username, password, senderNumbers, recipientNumbers, messageBodies, sendDate, messageClasses, checkingMessageIds, null);
        }
        
        /// <remarks/>
        public void SendSMS2Async(string username, string password, string senderNumbers, string[] recipientNumbers, string messageBodies, string sendDate, int messageClasses, long[] checkingMessageIds, object userState) {
            if ((this.SendSMS2OperationCompleted == null)) {
                this.SendSMS2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendSMS2OperationCompleted);
            }
            this.InvokeAsync("SendSMS2", new object[] {
                        username,
                        password,
                        senderNumbers,
                        recipientNumbers,
                        messageBodies,
                        sendDate,
                        messageClasses,
                        checkingMessageIds}, this.SendSMS2OperationCompleted, userState);
        }
        
        private void OnSendSMS2OperationCompleted(object arg) {
            if ((this.SendSMS2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendSMS2Completed(this, new SendSMS2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMessageStatus", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] GetMessageStatus(string username, string password, long[] MessageIDs) {
            object[] results = this.Invoke("GetMessageStatus", new object[] {
                        username,
                        password,
                        MessageIDs});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void GetMessageStatusAsync(string username, string password, long[] MessageIDs) {
            this.GetMessageStatusAsync(username, password, MessageIDs, null);
        }
        
        /// <remarks/>
        public void GetMessageStatusAsync(string username, string password, long[] MessageIDs, object userState) {
            if ((this.GetMessageStatusOperationCompleted == null)) {
                this.GetMessageStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMessageStatusOperationCompleted);
            }
            this.InvokeAsync("GetMessageStatus", new object[] {
                        username,
                        password,
                        MessageIDs}, this.GetMessageStatusOperationCompleted, userState);
        }
        
        private void OnGetMessageStatusOperationCompleted(object arg) {
            if ((this.GetMessageStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMessageStatusCompleted(this, new GetMessageStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCredit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double GetCredit(string username, string password) {
            object[] results = this.Invoke("GetCredit", new object[] {
                        username,
                        password});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void GetCreditAsync(string username, string password) {
            this.GetCreditAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetCreditAsync(string username, string password, object userState) {
            if ((this.GetCreditOperationCompleted == null)) {
                this.GetCreditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCreditOperationCompleted);
            }
            this.InvokeAsync("GetCredit", new object[] {
                        username,
                        password}, this.GetCreditOperationCompleted, userState);
        }
        
        private void OnGetCreditOperationCompleted(object arg) {
            if ((this.GetCreditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCreditCompleted(this, new GetCreditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckMessageIDs", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] CheckMessageIDs(string username, string password, long[] checkingids) {
            object[] results = this.Invoke("CheckMessageIDs", new object[] {
                        username,
                        password,
                        checkingids});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void CheckMessageIDsAsync(string username, string password, long[] checkingids) {
            this.CheckMessageIDsAsync(username, password, checkingids, null);
        }
        
        /// <remarks/>
        public void CheckMessageIDsAsync(string username, string password, long[] checkingids, object userState) {
            if ((this.CheckMessageIDsOperationCompleted == null)) {
                this.CheckMessageIDsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckMessageIDsOperationCompleted);
            }
            this.InvokeAsync("CheckMessageIDs", new object[] {
                        username,
                        password,
                        checkingids}, this.CheckMessageIDsOperationCompleted, userState);
        }
        
        private void OnCheckMessageIDsOperationCompleted(object arg) {
            if ((this.CheckMessageIDsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckMessageIDsCompleted(this, new CheckMessageIDsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReceiveMessages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Messages[] GetReceiveMessages(string username, string password, string destNumber, int isRead) {
            object[] results = this.Invoke("GetReceiveMessages", new object[] {
                        username,
                        password,
                        destNumber,
                        isRead});
            return ((Messages[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReceiveMessagesAsync(string username, string password, string destNumber, int isRead) {
            this.GetReceiveMessagesAsync(username, password, destNumber, isRead, null);
        }
        
        /// <remarks/>
        public void GetReceiveMessagesAsync(string username, string password, string destNumber, int isRead, object userState) {
            if ((this.GetReceiveMessagesOperationCompleted == null)) {
                this.GetReceiveMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReceiveMessagesOperationCompleted);
            }
            this.InvokeAsync("GetReceiveMessages", new object[] {
                        username,
                        password,
                        destNumber,
                        isRead}, this.GetReceiveMessagesOperationCompleted, userState);
        }
        
        private void OnGetReceiveMessagesOperationCompleted(object arg) {
            if ((this.GetReceiveMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReceiveMessagesCompleted(this, new GetReceiveMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCountForPostalCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCountForPostalCode(string username, string password, string postalcode) {
            object[] results = this.Invoke("GetCountForPostalCode", new object[] {
                        username,
                        password,
                        postalcode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCountForPostalCodeAsync(string username, string password, string postalcode) {
            this.GetCountForPostalCodeAsync(username, password, postalcode, null);
        }
        
        /// <remarks/>
        public void GetCountForPostalCodeAsync(string username, string password, string postalcode, object userState) {
            if ((this.GetCountForPostalCodeOperationCompleted == null)) {
                this.GetCountForPostalCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCountForPostalCodeOperationCompleted);
            }
            this.InvokeAsync("GetCountForPostalCode", new object[] {
                        username,
                        password,
                        postalcode}, this.GetCountForPostalCodeOperationCompleted, userState);
        }
        
        private void OnGetCountForPostalCodeOperationCompleted(object arg) {
            if ((this.GetCountForPostalCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCountForPostalCodeCompleted(this, new GetCountForPostalCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendBulkSmsToPostalCode", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long SendBulkSmsToPostalCode(string username, string password, string postalcode, string originator, string content, SendType sendType, System.DateTime sendDate, int startIndex, int count) {
            object[] results = this.Invoke("SendBulkSmsToPostalCode", new object[] {
                        username,
                        password,
                        postalcode,
                        originator,
                        content,
                        sendType,
                        sendDate,
                        startIndex,
                        count});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void SendBulkSmsToPostalCodeAsync(string username, string password, string postalcode, string originator, string content, SendType sendType, System.DateTime sendDate, int startIndex, int count) {
            this.SendBulkSmsToPostalCodeAsync(username, password, postalcode, originator, content, sendType, sendDate, startIndex, count, null);
        }
        
        /// <remarks/>
        public void SendBulkSmsToPostalCodeAsync(string username, string password, string postalcode, string originator, string content, SendType sendType, System.DateTime sendDate, int startIndex, int count, object userState) {
            if ((this.SendBulkSmsToPostalCodeOperationCompleted == null)) {
                this.SendBulkSmsToPostalCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendBulkSmsToPostalCodeOperationCompleted);
            }
            this.InvokeAsync("SendBulkSmsToPostalCode", new object[] {
                        username,
                        password,
                        postalcode,
                        originator,
                        content,
                        sendType,
                        sendDate,
                        startIndex,
                        count}, this.SendBulkSmsToPostalCodeOperationCompleted, userState);
        }
        
        private void OnSendBulkSmsToPostalCodeOperationCompleted(object arg) {
            if ((this.SendBulkSmsToPostalCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendBulkSmsToPostalCodeCompleted(this, new SendBulkSmsToPostalCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBulkRequestInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public RequestInfo GetBulkRequestInfo(string username, string password, long requestId) {
            object[] results = this.Invoke("GetBulkRequestInfo", new object[] {
                        username,
                        password,
                        requestId});
            return ((RequestInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetBulkRequestInfoAsync(string username, string password, long requestId) {
            this.GetBulkRequestInfoAsync(username, password, requestId, null);
        }
        
        /// <remarks/>
        public void GetBulkRequestInfoAsync(string username, string password, long requestId, object userState) {
            if ((this.GetBulkRequestInfoOperationCompleted == null)) {
                this.GetBulkRequestInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBulkRequestInfoOperationCompleted);
            }
            this.InvokeAsync("GetBulkRequestInfo", new object[] {
                        username,
                        password,
                        requestId}, this.GetBulkRequestInfoOperationCompleted, userState);
        }
        
        private void OnGetBulkRequestInfoOperationCompleted(object arg) {
            if ((this.GetBulkRequestInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBulkRequestInfoCompleted(this, new GetBulkRequestInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNewsList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public News[] GetNewsList(string username, string password) {
            object[] results = this.Invoke("GetNewsList", new object[] {
                        username,
                        password});
            return ((News[])(results[0]));
        }
        
        /// <remarks/>
        public void GetNewsListAsync(string username, string password) {
            this.GetNewsListAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetNewsListAsync(string username, string password, object userState) {
            if ((this.GetNewsListOperationCompleted == null)) {
                this.GetNewsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNewsListOperationCompleted);
            }
            this.InvokeAsync("GetNewsList", new object[] {
                        username,
                        password}, this.GetNewsListOperationCompleted, userState);
        }
        
        private void OnGetNewsListOperationCompleted(object arg) {
            if ((this.GetNewsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNewsListCompleted(this, new GetNewsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Cancel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] Cancel(string username, string password, long[] MessageIDs) {
            object[] results = this.Invoke("Cancel", new object[] {
                        username,
                        password,
                        MessageIDs});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void CancelAsync(string username, string password, long[] MessageIDs) {
            this.CancelAsync(username, password, MessageIDs, null);
        }
        
        /// <remarks/>
        public void CancelAsync(string username, string password, long[] MessageIDs, object userState) {
            if ((this.CancelOperationCompleted == null)) {
                this.CancelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelOperationCompleted);
            }
            this.InvokeAsync("Cancel", new object[] {
                        username,
                        password,
                        MessageIDs}, this.CancelOperationCompleted, userState);
        }
        
        private void OnCancelOperationCompleted(object arg) {
            if ((this.CancelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelCompleted(this, new CancelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPaymentUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPaymentUrl(string username, int price) {
            object[] results = this.Invoke("GetPaymentUrl", new object[] {
                        username,
                        price});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPaymentUrlAsync(string username, int price) {
            this.GetPaymentUrlAsync(username, price, null);
        }
        
        /// <remarks/>
        public void GetPaymentUrlAsync(string username, int price, object userState) {
            if ((this.GetPaymentUrlOperationCompleted == null)) {
                this.GetPaymentUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPaymentUrlOperationCompleted);
            }
            this.InvokeAsync("GetPaymentUrl", new object[] {
                        username,
                        price}, this.GetPaymentUrlOperationCompleted, userState);
        }
        
        private void OnGetPaymentUrlOperationCompleted(object arg) {
            if ((this.GetPaymentUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPaymentUrlCompleted(this, new GetPaymentUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public void CancelAsync1(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class Messages {
        
        private long messageIDField;
        
        private string recipientNumberField;
        
        private string senderNumberField;
        
        private string bodyField;
        
        private string receiveDateField;
        
        /// <remarks/>
        public long MessageID {
            get {
                return this.messageIDField;
            }
            set {
                this.messageIDField = value;
            }
        }
        
        /// <remarks/>
        public string RecipientNumber {
            get {
                return this.recipientNumberField;
            }
            set {
                this.recipientNumberField = value;
            }
        }
        
        /// <remarks/>
        public string SenderNumber {
            get {
                return this.senderNumberField;
            }
            set {
                this.senderNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public string ReceiveDate {
            get {
                return this.receiveDateField;
            }
            set {
                this.receiveDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class News {
        
        private int idField;
        
        private string textField;
        
        private System.DateTime postDateField;
        
        private int targetField;
        
        private int postTypeField;
        
        private string subjectField;
        
        private int byResellerIdField;
        
        private int userIdField;
        
        private System.DateTime expireDateField;
        
        private int priorityField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PostDate {
            get {
                return this.postDateField;
            }
            set {
                this.postDateField = value;
            }
        }
        
        /// <remarks/>
        public int Target {
            get {
                return this.targetField;
            }
            set {
                this.targetField = value;
            }
        }
        
        /// <remarks/>
        public int PostType {
            get {
                return this.postTypeField;
            }
            set {
                this.postTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public int ByResellerId {
            get {
                return this.byResellerIdField;
            }
            set {
                this.byResellerIdField = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpireDate {
            get {
                return this.expireDateField;
            }
            set {
                this.expireDateField = value;
            }
        }
        
        /// <remarks/>
        public int Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RequestDelivery {
        
        private long statusIdField;
        
        private long statusCountField;
        
        /// <remarks/>
        public long statusId {
            get {
                return this.statusIdField;
            }
            set {
                this.statusIdField = value;
            }
        }
        
        /// <remarks/>
        public long statusCount {
            get {
                return this.statusCountField;
            }
            set {
                this.statusCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class RequestInfo {
        
        private long idField;
        
        private string senderNumberField;
        
        private string messageField;
        
        private System.DateTime sendDateField;
        
        private int totalSmsField;
        
        private int priceField;
        
        private int statusField;
        
        private string statusDescriptionField;
        
        private RequestDelivery[] deliveryReportField;
        
        /// <remarks/>
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string senderNumber {
            get {
                return this.senderNumberField;
            }
            set {
                this.senderNumberField = value;
            }
        }
        
        /// <remarks/>
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime sendDate {
            get {
                return this.sendDateField;
            }
            set {
                this.sendDateField = value;
            }
        }
        
        /// <remarks/>
        public int totalSms {
            get {
                return this.totalSmsField;
            }
            set {
                this.totalSmsField = value;
            }
        }
        
        /// <remarks/>
        public int price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        public int status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public string statusDescription {
            get {
                return this.statusDescriptionField;
            }
            set {
                this.statusDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public RequestDelivery[] deliveryReport {
            get {
                return this.deliveryReportField;
            }
            set {
                this.deliveryReportField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public enum SendType {
        
        /// <remarks/>
        AllNumbers,
        
        /// <remarks/>
        RandomNumbers,
        
        /// <remarks/>
        SortingNumbers,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendSMSCompletedEventHandler(object sender, SendSMSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendSMS2CompletedEventHandler(object sender, SendSMS2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendSMS2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendSMS2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMessageStatusCompletedEventHandler(object sender, GetMessageStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMessageStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMessageStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCreditCompletedEventHandler(object sender, GetCreditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCreditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCreditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CheckMessageIDsCompletedEventHandler(object sender, CheckMessageIDsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckMessageIDsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckMessageIDsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetReceiveMessagesCompletedEventHandler(object sender, GetReceiveMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReceiveMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReceiveMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Messages[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Messages[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetCountForPostalCodeCompletedEventHandler(object sender, GetCountForPostalCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCountForPostalCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCountForPostalCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SendBulkSmsToPostalCodeCompletedEventHandler(object sender, SendBulkSmsToPostalCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendBulkSmsToPostalCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendBulkSmsToPostalCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetBulkRequestInfoCompletedEventHandler(object sender, GetBulkRequestInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBulkRequestInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBulkRequestInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RequestInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RequestInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetNewsListCompletedEventHandler(object sender, GetNewsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public News[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((News[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void CancelCompletedEventHandler(object sender, CancelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CancelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CancelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetPaymentUrlCompletedEventHandler(object sender, GetPaymentUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPaymentUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPaymentUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MKH.Permission.Model.SoftwareAccessUser
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PhysiotherapyCare")]
	public partial class DataClassesSoftwareAccessUserDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBL_SoftwareAccessUser(TBL_SoftwareAccessUser instance);
    partial void UpdateTBL_SoftwareAccessUser(TBL_SoftwareAccessUser instance);
    partial void DeleteTBL_SoftwareAccessUser(TBL_SoftwareAccessUser instance);
    #endregion
		
		public DataClassesSoftwareAccessUserDataContext() : 
				base(global::MKH.Permission.Model.Properties.Settings.Default.PhysiotherapyCareConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSoftwareAccessUserDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSoftwareAccessUserDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSoftwareAccessUserDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSoftwareAccessUserDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<VW_SoftwareAccessUser> VW_SoftwareAccessUsers
		{
			get
			{
				return this.GetTable<VW_SoftwareAccessUser>();
			}
		}
		
		public System.Data.Linq.Table<TBL_SoftwareAccessUser> TBL_SoftwareAccessUsers
		{
			get
			{
				return this.GetTable<TBL_SoftwareAccessUser>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="SEC.SP_SoftwareAccessUserDelete")]
		public int SP_SoftwareAccessUserDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SoftwareAccess_Id", DbType="Int")] System.Nullable<int> softwareAccess_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User_Id", DbType="Int")] System.Nullable<int> user_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(2000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), softwareAccess_Id, user_Id, msgRet);
			msgRet = ((string)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="SEC.SP_SoftwareAccessUserInsert")]
		public int SP_SoftwareAccessUserInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="SoftwareAccess_Id", DbType="Int")] System.Nullable<int> softwareAccess_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User_Id", DbType="Int")] System.Nullable<int> user_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), softwareAccess_Id, user_Id, msgRet);
			msgRet = ((string)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SEC.VW_SoftwareAccessUser")]
	public partial class VW_SoftwareAccessUser
	{
		
		private int _SoftwareAccess_Id;
		
		private int _User_Id;
		
		public VW_SoftwareAccessUser()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoftwareAccess_Id", DbType="Int NOT NULL")]
		public int SoftwareAccess_Id
		{
			get
			{
				return this._SoftwareAccess_Id;
			}
			set
			{
				if ((this._SoftwareAccess_Id != value))
				{
					this._SoftwareAccess_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int NOT NULL")]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this._User_Id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="SEC.TBL_SoftwareAccessUser")]
	public partial class TBL_SoftwareAccessUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoftwareAccess_Id;
		
		private int _User_Id;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoftwareAccess_IdChanging(int value);
    partial void OnSoftwareAccess_IdChanged();
    partial void OnUser_IdChanging(int value);
    partial void OnUser_IdChanged();
    #endregion
		
		public TBL_SoftwareAccessUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoftwareAccess_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SoftwareAccess_Id
		{
			get
			{
				return this._SoftwareAccess_Id;
			}
			set
			{
				if ((this._SoftwareAccess_Id != value))
				{
					this.OnSoftwareAccess_IdChanging(value);
					this.SendPropertyChanging();
					this._SoftwareAccess_Id = value;
					this.SendPropertyChanged("SoftwareAccess_Id");
					this.OnSoftwareAccess_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591

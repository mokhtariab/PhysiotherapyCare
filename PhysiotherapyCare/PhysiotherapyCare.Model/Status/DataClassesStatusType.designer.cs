#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhysiotherapyCare.Model.Status
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PhysiotherapyCare")]
	public partial class DataClassesStatusTypeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBL_StatusType(TBL_StatusType instance);
    partial void UpdateTBL_StatusType(TBL_StatusType instance);
    partial void DeleteTBL_StatusType(TBL_StatusType instance);
    partial void InsertTBL_StatusTypeDetail(TBL_StatusTypeDetail instance);
    partial void UpdateTBL_StatusTypeDetail(TBL_StatusTypeDetail instance);
    partial void DeleteTBL_StatusTypeDetail(TBL_StatusTypeDetail instance);
    #endregion
		
		public DataClassesStatusTypeDataContext() : 
				base(global::PhysiotherapyCare.Model.Properties.Settings.Default.PhysiotherapyCareConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesStatusTypeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesStatusTypeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesStatusTypeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesStatusTypeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<VW_StatusType> VW_StatusTypes
		{
			get
			{
				return this.GetTable<VW_StatusType>();
			}
		}
		
		public System.Data.Linq.Table<TBL_StatusType> TBL_StatusTypes
		{
			get
			{
				return this.GetTable<TBL_StatusType>();
			}
		}
		
		public System.Data.Linq.Table<TBL_StatusTypeDetail> TBL_StatusTypeDetails
		{
			get
			{
				return this.GetTable<TBL_StatusTypeDetail>();
			}
		}
		
		public System.Data.Linq.Table<VW_StatusTypeDetail> VW_StatusTypeDetails
		{
			get
			{
				return this.GetTable<VW_StatusTypeDetail>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="STA.SP_StatusTypeDelete")]
		public int SP_StatusTypeDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="SmallInt")] System.Nullable<short> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(2000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, msgRet);
			msgRet = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="STA.SP_StatusTypeDetailDelete")]
		public int SP_StatusTypeDetailDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(2000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, msgRet);
			msgRet = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="STA.SP_StatusTypeDetailInsert")]
		public int SP_StatusTypeDetailInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] ref System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusType_Id", DbType="SmallInt")] System.Nullable<short> statusType_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TitleName", DbType="VarChar(100)")] string titleName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, statusType_Id, titleName, msgRet);
			id = ((System.Nullable<int>)(result.GetParameterValue(0)));
			msgRet = ((string)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="STA.SP_StatusTypeDetailUpdate")]
		public int SP_StatusTypeDetailUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StatusType_Id", DbType="SmallInt")] System.Nullable<short> statusType_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TitleName", DbType="VarChar(100)")] string titleName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, statusType_Id, titleName, msgRet);
			msgRet = ((string)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="STA.SP_StatusTypeInsert")]
		public int SP_StatusTypeInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="SmallInt")] ref System.Nullable<short> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TitleName", DbType="VarChar(50)")] string titleName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, titleName, msgRet);
			id = ((System.Nullable<short>)(result.GetParameterValue(0)));
			msgRet = ((string)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="STA.SP_StatusTypeUpdate")]
		public int SP_StatusTypeUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="SmallInt")] System.Nullable<short> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TitleName", DbType="VarChar(50)")] string titleName, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, titleName, msgRet);
			msgRet = ((string)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="STA.VW_StatusType")]
	public partial class VW_StatusType
	{
		
		private short _Id;
		
		private string _TitleName;
		
		public VW_StatusType()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="SmallInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public short Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="VarChar(50)")]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this._TitleName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="STA.TBL_StatusType")]
	public partial class TBL_StatusType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Id;
		
		private string _TitleName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(short value);
    partial void OnIdChanged();
    partial void OnTitleNameChanging(string value);
    partial void OnTitleNameChanged();
    #endregion
		
		public TBL_StatusType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="VarChar(50)")]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this.OnTitleNameChanging(value);
					this.SendPropertyChanging();
					this._TitleName = value;
					this.SendPropertyChanged("TitleName");
					this.OnTitleNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="STA.TBL_StatusTypeDetail")]
	public partial class TBL_StatusTypeDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<short> _StatusType_Id;
		
		private string _TitleName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStatusType_IdChanging(System.Nullable<short> value);
    partial void OnStatusType_IdChanged();
    partial void OnTitleNameChanging(string value);
    partial void OnTitleNameChanged();
    #endregion
		
		public TBL_StatusTypeDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusType_Id", DbType="SmallInt")]
		public System.Nullable<short> StatusType_Id
		{
			get
			{
				return this._StatusType_Id;
			}
			set
			{
				if ((this._StatusType_Id != value))
				{
					this.OnStatusType_IdChanging(value);
					this.SendPropertyChanging();
					this._StatusType_Id = value;
					this.SendPropertyChanged("StatusType_Id");
					this.OnStatusType_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="VarChar(100)")]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this.OnTitleNameChanging(value);
					this.SendPropertyChanging();
					this._TitleName = value;
					this.SendPropertyChanged("TitleName");
					this.OnTitleNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="STA.VW_StatusTypeDetail")]
	public partial class VW_StatusTypeDetail
	{
		
		private int _Id;
		
		private System.Nullable<short> _StatusType_Id;
		
		private string _TitleName;
		
		private string _StatusTypeName;
		
		public VW_StatusTypeDetail()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusType_Id", DbType="SmallInt")]
		public System.Nullable<short> StatusType_Id
		{
			get
			{
				return this._StatusType_Id;
			}
			set
			{
				if ((this._StatusType_Id != value))
				{
					this._StatusType_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TitleName", DbType="VarChar(100)")]
		public string TitleName
		{
			get
			{
				return this._TitleName;
			}
			set
			{
				if ((this._TitleName != value))
				{
					this._TitleName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StatusTypeName", DbType="VarChar(50)")]
		public string StatusTypeName
		{
			get
			{
				return this._StatusTypeName;
			}
			set
			{
				if ((this._StatusTypeName != value))
				{
					this._StatusTypeName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591

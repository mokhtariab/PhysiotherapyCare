#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PhysiotherapyCare.Model.Doctors
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PhysiotherapyCare")]
	public partial class DataClassesDoctorsContractDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTBL_DoctorsContract(TBL_DoctorsContract instance);
    partial void UpdateTBL_DoctorsContract(TBL_DoctorsContract instance);
    partial void DeleteTBL_DoctorsContract(TBL_DoctorsContract instance);
    #endregion
		
		public DataClassesDoctorsContractDataContext() : 
				base(global::PhysiotherapyCare.Model.Properties.Settings.Default.PhysiotherapyCareConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDoctorsContractDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDoctorsContractDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDoctorsContractDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDoctorsContractDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<VW_DoctorsContract> VW_DoctorsContracts
		{
			get
			{
				return this.GetTable<VW_DoctorsContract>();
			}
		}
		
		public System.Data.Linq.Table<TBL_DoctorsContract> TBL_DoctorsContracts
		{
			get
			{
				return this.GetTable<TBL_DoctorsContract>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_DoctorsContractOnLineUpdate")]
		public int SP_DoctorsContractOnLineUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), msgRet);
			msgRet = ((string)(result.GetParameterValue(0)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_DoctorsContractDelete")]
		public int SP_DoctorsContractDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(2000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, msgRet);
			msgRet = ((string)(result.GetParameterValue(1)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_DoctorsContractUpdate")]
		public int SP_DoctorsContractUpdate([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Doctor_Id", DbType="Int")] System.Nullable<int> doctor_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContractNo", DbType="VarChar(20)")] string contractNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContractDate", DbType="VarChar(20)")] string contractDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContractEndDate", DbType="VarChar(20)")] string contractEndDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContractPercent", DbType="Int")] System.Nullable<int> contractPercent, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Active", DbType="Bit")] System.Nullable<bool> active, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User_Id", DbType="Int")] System.Nullable<int> user_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChangeDateTime", DbType="VarChar(20)")] string changeDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, doctor_Id, contractNo, contractDate, contractEndDate, contractPercent, active, user_Id, changeDateTime, msgRet);
			msgRet = ((string)(result.GetParameterValue(9)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SP_DoctorsContractInsert")]
		public int SP_DoctorsContractInsert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="Int")] ref System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Doctor_Id", DbType="Int")] System.Nullable<int> doctor_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContractNo", DbType="VarChar(20)")] string contractNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContractDate", DbType="VarChar(20)")] string contractDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContractEndDate", DbType="VarChar(20)")] string contractEndDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContractPercent", DbType="Int")] System.Nullable<int> contractPercent, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Active", DbType="Bit")] System.Nullable<bool> active, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="User_Id", DbType="Int")] System.Nullable<int> user_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ChangeDateTime", DbType="VarChar(20)")] string changeDateTime, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(1000)")] ref string msgRet)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, doctor_Id, contractNo, contractDate, contractEndDate, contractPercent, active, user_Id, changeDateTime, msgRet);
			id = ((System.Nullable<int>)(result.GetParameterValue(0)));
			msgRet = ((string)(result.GetParameterValue(9)));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VW_DoctorsContract")]
	public partial class VW_DoctorsContract
	{
		
		private int _Id;
		
		private int _Doctor_Id;
		
		private string _ContractNo;
		
		private string _ContractDate;
		
		private string _ContractEndDate;
		
		private System.Nullable<int> _ContractPercent;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _User_Id;
		
		private string _ChangeDateTime;
		
		private string _UsersNameFamily;
		
		public VW_DoctorsContract()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor_Id", DbType="Int NOT NULL")]
		public int Doctor_Id
		{
			get
			{
				return this._Doctor_Id;
			}
			set
			{
				if ((this._Doctor_Id != value))
				{
					this._Doctor_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="VarChar(20)")]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this._ContractNo = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractDate", DbType="VarChar(20)")]
		public string ContractDate
		{
			get
			{
				return this._ContractDate;
			}
			set
			{
				if ((this._ContractDate != value))
				{
					this._ContractDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractEndDate", DbType="VarChar(20)")]
		public string ContractEndDate
		{
			get
			{
				return this._ContractEndDate;
			}
			set
			{
				if ((this._ContractEndDate != value))
				{
					this._ContractEndDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractPercent", DbType="Int")]
		public System.Nullable<int> ContractPercent
		{
			get
			{
				return this._ContractPercent;
			}
			set
			{
				if ((this._ContractPercent != value))
				{
					this._ContractPercent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this._Active = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this._User_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDateTime", DbType="VarChar(10)")]
		public string ChangeDateTime
		{
			get
			{
				return this._ChangeDateTime;
			}
			set
			{
				if ((this._ChangeDateTime != value))
				{
					this._ChangeDateTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UsersNameFamily", DbType="VarChar(201)")]
		public string UsersNameFamily
		{
			get
			{
				return this._UsersNameFamily;
			}
			set
			{
				if ((this._UsersNameFamily != value))
				{
					this._UsersNameFamily = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TBL_DoctorsContract")]
	public partial class TBL_DoctorsContract : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Doctor_Id;
		
		private string _ContractNo;
		
		private string _ContractDate;
		
		private string _ContractEndDate;
		
		private System.Nullable<int> _ContractPercent;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _User_Id;
		
		private string _ChangeDateTime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDoctor_IdChanging(int value);
    partial void OnDoctor_IdChanged();
    partial void OnContractNoChanging(string value);
    partial void OnContractNoChanged();
    partial void OnContractDateChanging(string value);
    partial void OnContractDateChanged();
    partial void OnContractEndDateChanging(string value);
    partial void OnContractEndDateChanged();
    partial void OnContractPercentChanging(System.Nullable<int> value);
    partial void OnContractPercentChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnChangeDateTimeChanging(string value);
    partial void OnChangeDateTimeChanged();
    #endregion
		
		public TBL_DoctorsContract()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctor_Id", DbType="Int NOT NULL")]
		public int Doctor_Id
		{
			get
			{
				return this._Doctor_Id;
			}
			set
			{
				if ((this._Doctor_Id != value))
				{
					this.OnDoctor_IdChanging(value);
					this.SendPropertyChanging();
					this._Doctor_Id = value;
					this.SendPropertyChanged("Doctor_Id");
					this.OnDoctor_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractNo", DbType="VarChar(20)")]
		public string ContractNo
		{
			get
			{
				return this._ContractNo;
			}
			set
			{
				if ((this._ContractNo != value))
				{
					this.OnContractNoChanging(value);
					this.SendPropertyChanging();
					this._ContractNo = value;
					this.SendPropertyChanged("ContractNo");
					this.OnContractNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractDate", DbType="VarChar(20)")]
		public string ContractDate
		{
			get
			{
				return this._ContractDate;
			}
			set
			{
				if ((this._ContractDate != value))
				{
					this.OnContractDateChanging(value);
					this.SendPropertyChanging();
					this._ContractDate = value;
					this.SendPropertyChanged("ContractDate");
					this.OnContractDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractEndDate", DbType="VarChar(20)")]
		public string ContractEndDate
		{
			get
			{
				return this._ContractEndDate;
			}
			set
			{
				if ((this._ContractEndDate != value))
				{
					this.OnContractEndDateChanging(value);
					this.SendPropertyChanging();
					this._ContractEndDate = value;
					this.SendPropertyChanged("ContractEndDate");
					this.OnContractEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContractPercent", DbType="Int")]
		public System.Nullable<int> ContractPercent
		{
			get
			{
				return this._ContractPercent;
			}
			set
			{
				if ((this._ContractPercent != value))
				{
					this.OnContractPercentChanging(value);
					this.SendPropertyChanging();
					this._ContractPercent = value;
					this.SendPropertyChanged("ContractPercent");
					this.OnContractPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeDateTime", DbType="VarChar(20)")]
		public string ChangeDateTime
		{
			get
			{
				return this._ChangeDateTime;
			}
			set
			{
				if ((this._ChangeDateTime != value))
				{
					this.OnChangeDateTimeChanging(value);
					this.SendPropertyChanging();
					this._ChangeDateTime = value;
					this.SendPropertyChanged("ChangeDateTime");
					this.OnChangeDateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
